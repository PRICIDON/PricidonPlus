generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(nanoid())

  name     String
  email    String @unique
  password String

  isAutoRenewal Boolean @default(true) @map("is_auto_renewal")

  stripeCustomerId String? @unique @map("stripe_customer_id")

  subscription UserSubscription?

  transactions Transaction[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Plan {
  id String @id @default(nanoid())

  title       String
  description String

  features String[]

  monthlyPrice Int @map("monthly_price")
  yearlyPrice  Int @map("yearly_price")

  stripeMonthlyPriceId String @map("stripe_monthly_price_id")
  stripeYearlyPriceId  String @map("stripe_yearly_price_id")

  isFeatured Boolean @default(false) @map("is_featured")

  subscription UserSubscription[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("plans")
}

model UserSubscription {
  id String @id @default(nanoid())

  status SubscriptionStatus @default(PENDING_PAYMENT)

  startDate DateTime? @map("start_date")
  endDate   DateTime? @map("end_date")

  transactions Transaction[]

  stripeSubscriptionId String? @unique @map("stripe_subscription_id")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id")

  plan   Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)
  planId String @map("plan_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_subscription")
}

model Transaction {
  id String @id @default(nanoid())

  amount Int

  provider PaymentProvider
  status   TransactionStatus @default(PENDING)

  externelId   String? @map("externel_id")
  providerMeta Json?   @map("provider_meta")

  billingPeriod BillingPeriod @map("billing_period")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  subscription   UserSubscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  subscriptionId String           @map("subscription_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("transactions")
}

enum SubscriptionStatus {
  PENDING_PAYMENT
  ACTIVE
  EXPIRED

  @@map("subscription_statuses")
}

enum PaymentProvider {
  YOOKASSA
  STRIPE
  CRYPTOPAY

  @@map("payment_providers")
}

enum TransactionStatus {
  PENDING
  SUCCEEDED
  FAILED

  @@map("transaction_statuses")
}

enum BillingPeriod {
  MONTHLY
  YEARLY

  @@map("billing_period")
}
